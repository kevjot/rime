# Rime schema
# encoding: utf-8

schema:
    schema_id: chinese_flypy_xhyx
    name: '小鹤音形·定制'
    version: '0.1'
    author:
        - double pinyin layout by 鶴
        - Modified by Kevin <kevobras@gmail.com>
    description: |

    # dependencies:
    # - english

switches:
    - name: traditionalization
      reset: 0
      # states: [ 简, 繁 ]
    - name: emoji_suggestion
      reset: 0
      # states: [ "😑️", "😁️" ]
    - name: ascii_punct
      reset: 1
      # states: [ 。，, ．， ]
    - name: full_shape
      reset: 0
      # states: [ 半, 全 ]
    - name: ascii_mode
      reset: 1
      # states: [ 中, 英 ]

engine:
    processors:
        - ascii_composer # Windows 用户请解除此行注释，否则将会无法切换到英文输入
        - recognizer
        - key_binder
        - speller
        - selector
        - punctuator
        - navigator
        - express_editor
    segmentors:
        - ascii_segmentor
        - matcher
        - abc_segmentor
        - punct_segmentor
        - fallback_segmentor
    translators:
        - punct_translator
        - table_translator
        - table_translator@custom_phrase # 用户自定义词典
        - table_translator@custom_phraseVD
        - table_translator@custom_phraseXT
        - table_translator@custom_phraseYH
        - table_translator@custom_phraseMR
        # - table_translator@custom_phraseQMZ
        - table_translator@english # 英文输入
        # - reverse_lookup_translator
        - script_translator
        # - echo_translator
    filters:
        - uniquifier
        - simplifier@emoji_suggestion
        - simplifier@traditionalize # 简入繁出

emoji_suggestion:
    opencc_config: emoji.json
    option_name: emoji_suggestion
    tips: all

english:
    dictionary: english
    enable_completion: true
    enable_sentence: false
    initial_quality: -1 # 初始权重, 英文词库与双拼重码时英文置后显示
    comment_format: # 自定义提示码
        - xform/.*// # 清空提示码

speller:
    alphabet: zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA/
    finals: "'"
    # delimiter: " '"
    # max_code_length: 4
    auto_select: true #全码唯一自动上屏，无则后码顶上屏
    auto_select_pattern: ^;.$|^\w{4}$
    auto_clear: max_length #manual|auto|max_length 空码按下一键确认清屏|空码自动清|达到最长码时后码顶上清屏

translator:
    dictionary: chinese_flypydz
    prism: chinese_flypy_xhyx # 值与id相同, 如果去掉会变全拼
    enable_encoder: false
    encode_commit_history: false
    enable_sentence: false
    enable_user_dict: false
    enable_completion: true # 编码提示开关
    contextual_suggestions: true
    spelling_hints: 4

traditionalize:
    option_name: traditionalization
    opencc_config: s2t.json # s2t.json | s2hk.json | s2tw.json | s2twp.json  # 如果选择台湾繁体，长句子正常，但1~2个字时无法正确转换台湾繁体，仍然显示香港繁体，不知道为啥。
    tips: all # 转换提示: all 都显示 | char 仅单字显示 | none 不显示。


custom_phraseVD:
    dictionary: ''
    user_dict: chinese_flypy_top
    db_class: stabledb
    enable_sentence: false
    enable_completion: false
    initial_quality: 0 #用户词和系统词重码 置顶

custom_phraseMR:
    dictionary: ''
    user_dict: chinese_flypy
    db_class: stabledb
    enable_sentence: false
    enable_completion: false
    initial_quality: -1 #和系统词重码时居后

custom_phraseXT:
    dictionary: ''
    user_dict: chinese_flypy_sys
    db_class: stabledb
    enable_sentence: false
    enable_completion: false
    initial_quality: -1 #本表词和系统词重码居后

custom_phraseYH:
    dictionary: ''
    user_dict: chinese_flypy_user
    db_class: stabledb
    enable_sentence: false
    enable_completion: false
    initial_quality: -1 #用户词和系统词重码居后

# custom_phraseQMZ:
#     dictionary: ''
#     user_dict: chinese_flypy_full
#     db_class: stabledb
#     enable_sentence: false
#     enable_completion: false
#     initial_quality: -1 #和系统词重码时居后

# reverse_lookup:
#     dictionary: chinese_flypydz
#     comment_format:
#         # - xform/^/〔/
#         # - xform/$/〕/
#         - xform/ / /

punctuator:
    import_preset: symbols
    full_shape:
        '`': '｀'
        '~': '～'
        '!': '！'
        '@': '＠'
        '#': '＃'
        '$': '￥'
        '%': '％'
        '^': '……'
        '&': '＆'
        '*': '×'
        '(': '（'
        ')': '）'
        '_': '——'
        '+': '＋'
        '-': '－'
        '=': '＝'
        '[': '【'
        ']': '】'
        '{': '｛'
        '}': '｝'
        '|': '｜'
        "\\": '、'
        '/': '、'
        ';': '；'
        "'": '‘'
        ',': '，'
        '.': '。'
        '<': '《'
        '>': '》'
        '?': '？'
        '1': '壹'
        '2': '貳'
        '3': '參'
        '4': '肆'
        '5': '伍'
        '6': '陸'
        '7': '柒'
        '8': '捌'
        '9': '玖'
        '0': '零'
        's': '拾'
        'b': '佰'
        'q': '仟'
        'w': '萬'
        'n': '年'
        'y': ['月', '圓', '億']
        'r': '日'
        'x': '星期'
        'j': '角'
        'f': '分'
        'z': ['之', '整']
        'd': '第'
        'h': '號'
    half_shape:
        '`': '·'
        '~': '～'
        '!': '！'
        '@': '@'
        '#': '#'
        '$': '￥'
        '%': '%'
        '^': '……'
        '&': '&'
        '*': '×'
        '(': '（'
        ')': '）'
        '_': '——'
        '+': '+'
        '-': '-'
        '=': '='
        '[': '【'
        ']': '】'
        '{': '｛'
        '}': '｝'
        '|': '｜'
        "\\": '、'
        '/': '、'
        ';': '；'
        "'": '’'
        ',': '，'
        '.': '。'
        '<': '《'
        '>': '》'
        '?': '？'

key_binder:
    import_preset: default
    bindings:
        - { accept: semicolon, send: 2, when: has_menu } #分号次选

recognizer:
    import_preset: default
    patterns:
        punct: '^/([0-9]0?|[A-Za-z]+)$' # Symbol
        # reverse_lookup: '[a-z`]*`+[a-z`]*'
        email: '^[A-Za-z][-_.0-9A-Za-z]*@.*$'
        uppercase: "[A-Z][-_+.'0-9A-Za-z]*$"
        html: '^<[a-z]+>$'
        camel: '[a-z]+[A-Z].*$'
        url: '^(www[.]|https?:|ftp[.:]|mailto:|file:).*$|^[a-z]{1,11}[.:_].*$'

custom_phrase:
    dictionary: ''
    user_dict: custom_phrase
    db_class: stabledb
    enable_completion: false
    enable_sentence: true
    initial_quality: 1
