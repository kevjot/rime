# Rime schema settings
# encoding: utf-8

schema:
    schema_id: chinese_flypy
    name: "☯漢語·小鶴音形"
    version: "10.9.4"
    author:
        - 方案设计：何海峰 <flypy@qq.com>
        - Modified by Kevin <kevobras@gmail.com>
    description: |
        小鹤音形输入法
    dependencies:

punctuator:
    import_preset: default

switches:
    - name: simplification
      reset: 0
      # states: [ 简, 繁 ]
    - name: ascii_punct
      reset: 1
      # states: [ 。，, ．， ]
    - name: emoji_suggestion
      reset: 0
      # states: [ "😑️", "😁️" ]
    - name: full_shape
      # states: [ 半, 全 ]
    - name: ascii_mode
      reset: 0
      # states: [ 中, 英 ]

engine:
    processors:
        - ascii_composer
        - recognizer
        - key_binder
        - speller
        - punctuator
        - selector
        - navigator
        - express_editor
    segmentors:
        - ascii_segmentor
        - matcher
        - abc_segmentor
        - punct_segmentor
        - fallback_segmentor
    translators:
        - punct_translator
        - table_translator
        - lua_translator@date_translator
        # - table_translator@custom_phrase
        - table_translator@custom_phraseTOP
        - table_translator@custom_phraseSYS
        - table_translator@custom_phraseUSER
        - table_translator@custom_phraseFULL
        - reverse_lookup_translator
        - history_translator@history
        - lua_translator@calculator_translator
    filters:
        - simplifier
        - simplifier@simplification
        - simplifier@emoji_suggestion
        - uniquifier

emoji_suggestion:
    opencc_config: emoji.json
    option_name: emoji_suggestion
    tips: all

speller:
    alphabet: "abcdefghijklmnopqrstuvwxyz;'"
    initials: ';abcdefghijklmnopqrstuvwxyz'
    finals: "'"
    #delimiter: " '"
    max_code_length: 4
    auto_select: true #全码唯一自动上屏，无则后码顶上屏
    auto_select_pattern: ^;.$|^\w{4}$
    auto_clear: max_length #manual|auto|max_length 空码按下一键确认清屏|空码自动清|达到最长码时后码顶上清屏

translator:
    dictionary: chinese_flypy
    enable_charset_filter: false
    enable_sentence: false
    enable_completion: true # 编码提示开关
    enable_user_dict: false
    disable_user_dict_for_patterns:
        - "^z.*$"

history:
    input: ;f
    size: 1 #重复前几次上屏
    initial_quality: 1 #首选

simplification:
    opencc_config: s2tw.json
    option_name: simplification
    tips: all #简繁对照

custom_phraseTOP:
    dictionary: ""
    user_dict: ./dicts.zh/chinese_flypy_top
    db_class: stabledb
    enable_sentence: false
    enable_completion: false
    initial_quality: 0 #用户词和系统词重码 置顶

custom_phraseSYS:
    dictionary: ""
    user_dict: ./dicts.zh/chinese_flypy_sys
    db_class: stabledb
    enable_sentence: false
    enable_completion: false
    initial_quality: -1 #本表词和系统词重码居后

custom_phraseUSER:
    dictionary: ""
    user_dict: ./dicts.zh/chinese_flypy_user
    db_class: stabledb
    enable_sentence: false
    enable_completion: false
    initial_quality: -1 #用户词和系统词重码居后

custom_phraseFULL:
    dictionary: ""
    user_dict: ./dicts.zh/chinese_flypy_full
    db_class: stabledb
    enable_sentence: false
    enable_completion: false
    initial_quality: -1 #和系统词重码时居后

custom_phrase:
    dictionary: ""
    user_dict: custom_phrase
    db_class: stabledb
    enable_completion: false
    enable_sentence: true
    initial_quality: 1

reverse_lookup:
    dictionary: chinese_flypydz
    prefix: "`"
    suffix: "'"
    tips: 〔音形〕
    comment_format:
        # - xform/^/〔/
        # - xform/$/〕/
        # - xform/ / /

key_binder:
    import_preset: default #方案切换相关
    bindings:
        - { accept: semicolon, send: 2, when: has_menu } #分号次选
        # - {accept: comma, send: comma, when: paging} #注销逗号翻页
        # - {accept: period, send: period, when: has_menu} #注销句号翻页
        # - {accept: Release+semicolon, send: semicolon, when: has_menu} #如启用此行，分号引导功能无效
        # - {accept: Release+period, send: period, when: composing} #句号顶屏
        # - {accept: Release+comma, send: comma, when: composing} #逗号顶屏
        # - {accept: "Tab", send: Escape, when: composing}
        # - {accept: "Shift_R", send: Escape, when: composing}
        # - {when: has_menu, accept: space, send: space}      #针对候选时，作用空格
        # - {when: composing, accept: space, send: Return}    #有输入码时，回车清编码

recognizer:
    import_preset: default
    patterns:
        #uppercase: "[A-Z][-_+.'0-9A-Za-z]*$"
        uppercase: "" #中文状态大写锁定直接上屏
        reverse_lookup: "[a-z`]*`+[a-z`]*"
        punct: ""
        expression: "^=.*$"

menu:
    page_size: 4 #候选项数
